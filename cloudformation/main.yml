---
AWSTemplateFormatVersion: "2010-09-09"
Description: Creation of Vpc,PrivateSubnets,PublicSubnets,SecurityGroups,Database,s3-bucket etc.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Configuration Of Resources
        Parameters:
          - VpcCIDR
          - PublicSubnetAZ1
          - PublicSubnetAZ2
          - PrivateSubnetAZ1
          - PrivateSubnetAZ2
          - AvZone1
          - AvZone2
          - SecurityGroups
          - KeyPair
          - BucketName
          - HostedZoneName
          - S3Bucket
          - TemplatePath
      - Label:
          default: Choose  Environment
        Parameters:
          - Environment

Parameters:
  Environment:
    Type: String
    Description: Used for miscellaneous object names and tags
    AllowedValues:
      - "dev"
      - "test"
      - "qa"
      - "prod"
    Default: dev
  VpcCIDR:
    Type: String
    Description: IP Address range for the VPC
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Valid IP CIDR range as x.x.x.x/x.
    Default: 10.10.0.0/16
  PublicSubnetAZ1:
    Type: String
    Description: IP Address range for AZ1 public subnet
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Valid IP CIDR block range - x.x.x.x/x.
    Default: 10.10.0.0/24
  PublicSubnetAZ2:
    Type: String
    Description: IP Address range for AZ2 public subnet
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Valid IP CIDR block range - x.x.x.x/x.
    Default: 10.10.2.0/24
  PrivateSubnetAZ1:
    Type: String
    Description: IP Address range for AZ1 private subnet
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Valid IP CIDR block range - x.x.x.x/x.
    Default: 10.10.1.0/24
  PrivateSubnetAZ2:
    Type: String
    Description: IP Address range for AZ2 private subnet
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Valid IP CIDR block range - x.x.x.x/x.
    Default: 10.10.3.0/24
  AvZone1:
    Type: String
    Description: First AZ to use for subnets, etc.
    ConstraintDescription: "Must be a valid AZ - # aws ec2 describe-availability-zones"
    Default: us-east-2a
  AvZone2:
    Type: String
    Description: Second AZ to use for subnets, etc.
    ConstraintDescription: "Must be a valid AZ - # aws ec2 describe-availability-zones"
    Default: us-east-2b

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair

  RemoteCIDR:
    Type: String
    Description:
      CIDR IP range allowed to login remotely to the VPC, ideally your
      VPN/ISP netblock
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0

  DBInstanceClass:
    Type: String
    Description: Type of DB instance i.e db.t2.micro etc.
    Default: db.t2.micro
  DBMasterPassword:
    Type: String
    Description: Password for db master user
    Default: "NG$Pir7ySMJ9m&p9"
  DBMasterUser:
    Type: String
    Description: Username for db master user
    Default: "MOOVE_DEV"

  HostedZoneName:
    Description: The route53 HostedZoneName.
    Type: String
    Default: next2cloud.tk.

  S3Bucket:
    Type: String
    Description:
      S3Bucket containing CloudFormation templates, also used for S3 VPC
      Endpoint policy
    Default: cloudformation-infra-assets
  BucketName:
    Type: String
    Description: The name of the S3 Bucket to create
    Default: moove-test-
  TemplatePath:
    Type: String
    Description:
      Path to CloudFormation templates (relative to top level of S3Bucket
      parameter)
    Default: /cloudformation_templates/

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: "True"
      EnableDnsHostnames: "True"
      CidrBlock:
        Ref: VpcCIDR
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - vpc_
                - Ref: Environment
        - Key: Environment
          Value:
            Ref: Environment

  Subnets:
    DependsOn:
      - VPC
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - subnets.yml
      Parameters:
        Environment:
          Ref: Environment
        VPC:
          Ref: VPC
        PublicSubnetAZ1:
          Ref: PublicSubnetAZ1
        PrivateSubnetAZ1:
          Ref: PrivateSubnetAZ1
        PublicSubnetAZ2:
          Ref: PublicSubnetAZ2
        PrivateSubnetAZ2:
          Ref: PrivateSubnetAZ2
        AvZone1:
          Ref: AvZone1
        AvZone2:
          Ref: AvZone2
      TimeoutInMinutes: "20"

  SecurityGroups:
    DependsOn:
      - VPC
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - security-groups.yml
      Parameters:
        Environment:
          Ref: Environment
        VPC:
          Ref: VPC
      TimeoutInMinutes: "10"

  RolesAndProfiles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - iam-roles-profiles.yml
      Parameters:
        Environment: !Ref Environment
        VPC: !Ref VPC
      TimeoutInMinutes: "15"
  Database:
    DependsOn:
      - SecurityGroups
      - Subnets
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - database.yml
      Parameters:
        Environment: !Ref Environment
        DBSubnets:
          !Join [
            ",",
            [
              !GetAtt "Subnets.Outputs.PubSubnetAZ1",
              !GetAtt "Subnets.Outputs.PubSubnetAZ2",
            ],
          ]
        DBSecurityGroup: !GetAtt "SecurityGroups.Outputs.DBSecurityGroup"
        GlobalSecurityGroup: !GetAtt "SecurityGroups.Outputs.GlobalSecurityGroup"
        DBInstanceClass: !Ref DBInstanceClass
        DBMasterPassword: !Ref DBMasterPassword
        DBMasterUser: !Ref DBMasterUser
      TimeoutInMinutes: 30

  Bucket:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - s3-bucket.yml
      Parameters:
        BucketName:
          Ref: BucketName

  EC2Instance:
    DependsOn:
      - VPC
      - Subnets
      - SecurityGroups

    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - ec2-instance.yml
      Parameters:
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        EC2SubnetId: !GetAtt "Subnets.Outputs.PubSubnetAZ1"
        EC2SecurityGroups:
          !Join [
            ",",
            [
              !GetAtt "SecurityGroups.Outputs.GlobalSecurityGroup",
              !GetAtt "SecurityGroups.Outputs.EC2SecurityGroup",
            ],
          ]
  DNSRecordSet:
    DependsOn:
      - EC2Instance
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.amazonaws.com/
            - Ref: S3Bucket
            - Ref: TemplatePath
            - route53.yml
      Parameters:
        HostedZoneName: !Ref HostedZoneName
        Ec2Eip: !GetAtt "EC2Instance.Outputs.EIPAddress"

Outputs:
  VPC:
    Description: VPC ID of the new VPC
    Value:
      Ref: VPC
  PublicSubnetAZ1:
    Description: "Generic public subnet in az1"
    Value: !GetAtt "Subnets.Outputs.PubSubnetAZ1"
  PublicSubnetAZ2:
    Description: "Generic public subnet in az2"
    Value: !GetAtt "Subnets.Outputs.PubSubnetAZ2"
  PrivateSubnetAZ1:
    Description: "Generic private subnet in az1"
    Value: !GetAtt "Subnets.Outputs.PrivSubnetAZ1"
  PrivateSubnetAZ2:
    Description: "Generic private subnet in az2"
    Value: !GetAtt "Subnets.Outputs.PrivSubnetAZ2"
  GlobalSecurityGroup:
    Description: Security group for SSH Connection
    Value: !GetAtt "SecurityGroups.Outputs.GlobalSecurityGroup"
  EC2SecurityGroup:
    Description: Security group for public access
    Value: !GetAtt "SecurityGroups.Outputs.EC2SecurityGroup"
  DBSecurityGroup:
    Description: "Security group for database instance"
    Value: !GetAtt "SecurityGroups.Outputs.DBSecurityGroup"
  DatabaseEndpoint:
    Description: "Endpoint for db instance"
    Value: !GetAtt "Database.Outputs.DatabaseEndPoint"
  AssetS3Bucket:
    Description: "S3 Bucket for object storage"
    Value: !GetAtt "Bucket.Outputs.AssetS3Bucket"
  ECSInstanceProfile:
    Description: "Master instance profile"
    Value: !GetAtt "RolesAndProfiles.Outputs.ECSInstanceProfile"
  InstanceId:
    Value: !GetAtt "EC2Instance.Outputs.InstanceId"
  PublicDNS:
    Value: !GetAtt "EC2Instance.Outputs.PublicDNS"
  PublicIP:
    Value: !GetAtt "EC2Instance.Outputs.PublicIP"
  EIPAddress:
    Description: EIP-address of ec2-instance
    Value: !GetAtt "EC2Instance.Outputs.EIPAddress"
